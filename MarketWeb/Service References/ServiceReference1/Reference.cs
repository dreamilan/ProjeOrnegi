//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MarketWeb.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TB_UserSurrogate", Namespace="http://schemas.datacontract.org/2004/07/MarketSurrogate")]
    [System.SerializableAttribute()]
    public partial class TB_UserSurrogate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TB_ColorSurrogate", Namespace="http://schemas.datacontract.org/2004/07/MarketSurrogate")]
    [System.SerializableAttribute()]
    public partial class TB_ColorSurrogate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColoID {
            get {
                return this.ColoIDField;
            }
            set {
                if ((this.ColoIDField.Equals(value) != true)) {
                    this.ColoIDField = value;
                    this.RaisePropertyChanged("ColoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorCode {
            get {
                return this.ColorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorCodeField, value) != true)) {
                    this.ColorCodeField = value;
                    this.RaisePropertyChanged("ColorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorName {
            get {
                return this.ColorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorNameField, value) != true)) {
                    this.ColorNameField = value;
                    this.RaisePropertyChanged("ColorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TB_CitySurrogate", Namespace="http://schemas.datacontract.org/2004/07/MarketSurrogate")]
    [System.SerializableAttribute()]
    public partial class TB_CitySurrogate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TB_CategorySurrogate", Namespace="http://schemas.datacontract.org/2004/07/MarketSurrogate")]
    [System.SerializableAttribute()]
    public partial class TB_CategorySurrogate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TB_ProductSurrogate", Namespace="http://schemas.datacontract.org/2004/07/MarketSurrogate")]
    [System.SerializableAttribute()]
    public partial class TB_ProductSurrogate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MarketWeb.ServiceReference1.TB_CategorySurrogate CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MarketWeb.ServiceReference1.TB_CitySurrogate CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MarketWeb.ServiceReference1.TB_ColorSurrogate ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MarketWeb.ServiceReference1.TB_CategorySurrogate Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MarketWeb.ServiceReference1.TB_CitySurrogate City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MarketWeb.ServiceReference1.TB_ColorSurrogate Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserRegister", ReplyAction="http://tempuri.org/IService1/UserRegisterResponse")]
        bool UserRegister(MarketWeb.ServiceReference1.TB_UserSurrogate user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserRegister", ReplyAction="http://tempuri.org/IService1/UserRegisterResponse")]
        System.Threading.Tasks.Task<bool> UserRegisterAsync(MarketWeb.ServiceReference1.TB_UserSurrogate user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserLogin", ReplyAction="http://tempuri.org/IService1/UserLoginResponse")]
        MarketWeb.ServiceReference1.TB_UserSurrogate UserLogin(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserLogin", ReplyAction="http://tempuri.org/IService1/UserLoginResponse")]
        System.Threading.Tasks.Task<MarketWeb.ServiceReference1.TB_UserSurrogate> UserLoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetColors", ReplyAction="http://tempuri.org/IService1/GetColorsResponse")]
        System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_ColorSurrogate> GetColors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetColors", ReplyAction="http://tempuri.org/IService1/GetColorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_ColorSurrogate>> GetColorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCities", ReplyAction="http://tempuri.org/IService1/GetCitiesResponse")]
        System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_CitySurrogate> GetCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCities", ReplyAction="http://tempuri.org/IService1/GetCitiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_CitySurrogate>> GetCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCategories", ReplyAction="http://tempuri.org/IService1/GetCategoriesResponse")]
        System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_CategorySurrogate> GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCategories", ReplyAction="http://tempuri.org/IService1/GetCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_CategorySurrogate>> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProducts", ReplyAction="http://tempuri.org/IService1/GetProductsResponse")]
        System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_ProductSurrogate> GetProducts(System.Collections.Generic.List<int> kategoriID, System.Collections.Generic.List<int> colorID, System.Collections.Generic.List<int> cityID, System.Nullable<decimal> minPrice, System.Nullable<decimal> maxPrice, System.Nullable<System.DateTime> minTarih, System.Nullable<System.DateTime> maxTarih);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProducts", ReplyAction="http://tempuri.org/IService1/GetProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_ProductSurrogate>> GetProductsAsync(System.Collections.Generic.List<int> kategoriID, System.Collections.Generic.List<int> colorID, System.Collections.Generic.List<int> cityID, System.Nullable<decimal> minPrice, System.Nullable<decimal> maxPrice, System.Nullable<System.DateTime> minTarih, System.Nullable<System.DateTime> maxTarih);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCategory", ReplyAction="http://tempuri.org/IService1/AddCategoryResponse")]
        bool AddCategory(MarketWeb.ServiceReference1.TB_CategorySurrogate category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCategory", ReplyAction="http://tempuri.org/IService1/AddCategoryResponse")]
        System.Threading.Tasks.Task<bool> AddCategoryAsync(MarketWeb.ServiceReference1.TB_CategorySurrogate category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        bool AddProduct(MarketWeb.ServiceReference1.TB_ProductSurrogate product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        System.Threading.Tasks.Task<bool> AddProductAsync(MarketWeb.ServiceReference1.TB_ProductSurrogate product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCategory", ReplyAction="http://tempuri.org/IService1/UpdateCategoryResponse")]
        bool UpdateCategory(MarketWeb.ServiceReference1.TB_CategorySurrogate category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCategory", ReplyAction="http://tempuri.org/IService1/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<bool> UpdateCategoryAsync(MarketWeb.ServiceReference1.TB_CategorySurrogate category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        bool UpdateProduct(MarketWeb.ServiceReference1.TB_ProductSurrogate product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        System.Threading.Tasks.Task<bool> UpdateProductAsync(MarketWeb.ServiceReference1.TB_ProductSurrogate product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCategory", ReplyAction="http://tempuri.org/IService1/DeleteCategoryResponse")]
        bool DeleteCategory(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCategory", ReplyAction="http://tempuri.org/IService1/DeleteCategoryResponse")]
        System.Threading.Tasks.Task<bool> DeleteCategoryAsync(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        bool DeleteProduct(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        System.Threading.Tasks.Task<bool> DeleteProductAsync(int productID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MarketWeb.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MarketWeb.ServiceReference1.IService1>, MarketWeb.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UserRegister(MarketWeb.ServiceReference1.TB_UserSurrogate user) {
            return base.Channel.UserRegister(user);
        }
        
        public System.Threading.Tasks.Task<bool> UserRegisterAsync(MarketWeb.ServiceReference1.TB_UserSurrogate user) {
            return base.Channel.UserRegisterAsync(user);
        }
        
        public MarketWeb.ServiceReference1.TB_UserSurrogate UserLogin(string userName, string password) {
            return base.Channel.UserLogin(userName, password);
        }
        
        public System.Threading.Tasks.Task<MarketWeb.ServiceReference1.TB_UserSurrogate> UserLoginAsync(string userName, string password) {
            return base.Channel.UserLoginAsync(userName, password);
        }
        
        public System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_ColorSurrogate> GetColors() {
            return base.Channel.GetColors();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_ColorSurrogate>> GetColorsAsync() {
            return base.Channel.GetColorsAsync();
        }
        
        public System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_CitySurrogate> GetCities() {
            return base.Channel.GetCities();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_CitySurrogate>> GetCitiesAsync() {
            return base.Channel.GetCitiesAsync();
        }
        
        public System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_CategorySurrogate> GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_CategorySurrogate>> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_ProductSurrogate> GetProducts(System.Collections.Generic.List<int> kategoriID, System.Collections.Generic.List<int> colorID, System.Collections.Generic.List<int> cityID, System.Nullable<decimal> minPrice, System.Nullable<decimal> maxPrice, System.Nullable<System.DateTime> minTarih, System.Nullable<System.DateTime> maxTarih) {
            return base.Channel.GetProducts(kategoriID, colorID, cityID, minPrice, maxPrice, minTarih, maxTarih);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MarketWeb.ServiceReference1.TB_ProductSurrogate>> GetProductsAsync(System.Collections.Generic.List<int> kategoriID, System.Collections.Generic.List<int> colorID, System.Collections.Generic.List<int> cityID, System.Nullable<decimal> minPrice, System.Nullable<decimal> maxPrice, System.Nullable<System.DateTime> minTarih, System.Nullable<System.DateTime> maxTarih) {
            return base.Channel.GetProductsAsync(kategoriID, colorID, cityID, minPrice, maxPrice, minTarih, maxTarih);
        }
        
        public bool AddCategory(MarketWeb.ServiceReference1.TB_CategorySurrogate category) {
            return base.Channel.AddCategory(category);
        }
        
        public System.Threading.Tasks.Task<bool> AddCategoryAsync(MarketWeb.ServiceReference1.TB_CategorySurrogate category) {
            return base.Channel.AddCategoryAsync(category);
        }
        
        public bool AddProduct(MarketWeb.ServiceReference1.TB_ProductSurrogate product) {
            return base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task<bool> AddProductAsync(MarketWeb.ServiceReference1.TB_ProductSurrogate product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public bool UpdateCategory(MarketWeb.ServiceReference1.TB_CategorySurrogate category) {
            return base.Channel.UpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCategoryAsync(MarketWeb.ServiceReference1.TB_CategorySurrogate category) {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        public bool UpdateProduct(MarketWeb.ServiceReference1.TB_ProductSurrogate product) {
            return base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProductAsync(MarketWeb.ServiceReference1.TB_ProductSurrogate product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public bool DeleteCategory(int categoryID) {
            return base.Channel.DeleteCategory(categoryID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCategoryAsync(int categoryID) {
            return base.Channel.DeleteCategoryAsync(categoryID);
        }
        
        public bool DeleteProduct(int productID) {
            return base.Channel.DeleteProduct(productID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductAsync(int productID) {
            return base.Channel.DeleteProductAsync(productID);
        }
    }
}
